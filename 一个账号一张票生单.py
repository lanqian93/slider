import csv
from get_cookie import set_jar
import re
import requests
import time
import random
import pymysql
import uuid


user_agent = [
    "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50",
    "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; InfoPath.3; rv:11.0) like Gecko",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",
    "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1",
    "Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1",
    "Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; en) Presto/2.8.131 Version/11.11",
    "Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Maxthon 2.0)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; TencentTraveler 4.0)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; The World)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Avant Browser)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)",
    "Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5",
    "Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5",
    "Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5",
    "Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1",
    "MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1",
    "Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10",
    "Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13",
    "Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+",
    "Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0",
    "Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)",
    "UCWEB7.0.2.37/28/999",
    "NOKIA5700/ UCWEB7.0.2.37/28/999",
    "Openwave/ UCWEB7.0.2.37/28/999",
    "Mozilla/4.0 (compatible; MSIE 6.0; ) Opera/UCWEB7.0.2.37/28/999",
    # iPhone 6：
    "Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25",

]
city_list = {'SHA':'上海',
'SHA':'上海虹桥',
'PVG':'上海浦东',
'BJS':'北京',
'CAN':'广州',
'SZX':'深圳',
'XIY':'西安',
'KMG':'昆明',
'CTU':'成都',
'HGH':'杭州',
'TAO':'青岛',
'TYN':'太原',
'CSX':'长沙',
'HKG':'香港（中国香港）',
'TYO':'东京',
'TPE':'台北（中国台湾）',
'SEL':'首尔',
'SIN':'新加坡',
'BKK':'曼谷',
'LAX':'洛杉矶',
'SYD':'悉尼',
'NYC':'纽约',
'MEL':'墨尔本',
'LON':'伦敦',
'PAR':'巴黎',
'ABI':'阿比林',
'ABJ':'阿比让',
'ABR':'阿伯丁(美国)',
'ABZ':'阿伯丁(英国)',
'ABQ':'阿布奎基',
'AUH':'阿布扎比',
'ADL':'阿德莱德',
'ALG':'阿尔及尔',
'YIE':'阿尔山',
'ACV':'阿卡塔',
'ACC':'阿克拉',
'AKU':'阿克苏',
'AJU':'阿拉卡茹',
'POA':'阿雷格里港',
'NGQ':'阿里',
'ALC':'阿利坎特',
'AUA':'阿鲁巴',
'ABE':'阿伦敦(宾夕法尼亚，美国)',
'AMA':'阿马里略',
'ARM':'阿米代尔',
'AMS':'阿姆斯特丹',
'AAQ':'阿纳帕',
'ATW':'阿普雷顿',
'AVL':'阿什维尔',
'ASF':'阿斯特拉罕',
'AVN':'阿维尼翁',
'AJA':'阿雅克肖',
'IDA':'爱达福尔斯',
'YEA':'埃德蒙顿',
'EDI':'爱丁堡',
'IMT':'艾恩芒廷',
'BOG':'波哥大',
'EKO':'埃尔科',
'ELP':'埃尔帕索',
'AYQ':'艾尔斯岩',
'EXT':'埃克塞特',
'ASP':'爱丽斯泉',
'EVN':'埃里温',
'EMD':'埃默拉尔德',
'EVV':'埃文斯维尔',
'ONT':'安大略',
'ANC':'安克雷奇',
'AOI':'安科纳',
'AMM':'安曼',
'AQG':'安庆',
'AOG':'鞍山',
'AVA':'安顺',
'ANR':'安特卫普',
'PVR':'巴亚尔塔港',
'ALB':'奥尔巴尼',
'AAL':'奥尔堡',
'AGS':'奥古斯塔（美国）',
'AKL':'奥克兰（新西兰）',
'OAK':'奥克兰（美国）',
'ORL':'奥兰多',
'OMA':'奥马哈',
'MFM':'澳门（中国澳门）',
'OSL':'奥斯陆',
'AUS':'奥斯汀',
'AAT':'阿勒泰',
'BWI':'巴尔的摩',
'PMO':'巴勒莫',
'BRI':'巴里',
'PAR':'巴黎',
'DPS':'巴厘岛',
'BAH':'巴林',
'VLC':'巴伦西亚',
'BKO':'巴马科',
'PTY':'巴拿马',
'BSL':'巴塞尔',
'BCN':'巴塞罗那',
'BIA':'巴斯蒂亚',
'BTR':'巴吞鲁日',
'BSB':'巴西利亚',
'AEB':'百色',
'BGF':'班吉',
'BGR':'邦哥尔',
'BUR':'伯班克',
'BSD':'保山',
'BAV':'包头',
'BFS':'贝尔法斯特',
'BEG':'贝尔格莱德',
'BGO':'卑尔根',
'BHY':'北海',
'BJS':'北京',
'PEK':'北京首都',
'NAY':'北京南苑',
'BEY':'贝鲁特',
'BIO':'毕尔巴鄂',
'PEE':'彼尔姆',
'BFJ':'毕节',
'BIL':'比灵斯',
'PSA':'比萨',
'BIS':'俾斯麦',
'BTM':'比尤特',
'BGM':'宾厄姆顿',
'PUF':'波城',
'BOD':'波尔多',
'PIH':'波卡特洛',
'BER':'柏林',
'BLQ':'博洛尼亚',
'BPT':'波蒙特',
'BHM':'伯明翰(美国)',
'BHX':'伯明翰(英国)',
'BON':'博奈尔',
'BOS':'波士顿',
'PDX':'波特兰',
'BOI':'博伊西',
'BZN':'博兹曼',
'BUD':'布达佩斯',
'BUF':'布法罗',
'BUH':'布加勒斯特',
'BZV':'布拉柴维尔',
'PRG':'布拉格',
'BRO':'布朗斯维尔',
'BES':'布勒斯特',
'BNE':'布里斯班',
'BRS':'布里斯托',
'BDS':'布林迪西',
'BRU':'布鲁塞尔',
'BJM':'布琼布拉',
'BUE':'布宜诺斯艾利斯',
'BPE':'北戴河',
'CHS':'查尔斯顿',
'CHA':'查塔努加',
'NBS':'长白山',
'CGQ':'长春',
'CGD':'常德',
'NGS':'长崎',
'CSX':'长沙',
'CIH':'长治',
'CZX':'常州',
'CHG':'朝阳',
'CTU':'成都',
'CIF':'赤峰',
'CKG':'重庆',
'OKA':'冲绳',
'CWJ':'沧源',
'OSA':'大阪',
'YQU':'大草原城',
'DRW':'达尔文',
'OIT':'大分',
'GFK':'大福克斯',
'GRR':'大急流城',
'DAC':'达卡',
'DKR':'达喀尔',
'DFW':'达拉斯',
'DLU':'大理',
'DLC':'大连',
'GTF':'大瀑布村',
'TAE':'大邱',
'DAT':'大同',
'DAX':'达州',
'DAY':'代顿',
'DAB':'代托纳比奇',
'DDG':'丹东',
'DEN':'丹佛',
'DYN':'丹阳',
'DCY':'稻城',
'DUR':'德班',
'DRS':'德累斯顿',
'HXD':'德令哈',
'DLH':'德卢斯',
'DSM':'得梅因',
'DPO':'德文波特',
'DXB':'迪拜',
'DBQ':'迪比克',
'TBS':'第比利斯',
'DIK':'迪克森',
'TRS':'的里瓦斯特',
'TSR':'蒂米什瓦拉',
'DTT':'底特律',
'TYO':'东京',
'HND':'东京羽田',
'NRT':'东京成田',
'DOY':'东营',
'DUB':'都柏林',
'DLA':'杜阿拉',
'DRO':'杜兰戈',
'TRN':'都灵',
'DUS':'杜塞尔多夫',
'DNH':'敦煌',
'YTO':'多伦多',
'DHN':'多森',
'DQA':'大庆',
'DSN':'鄂尔多斯',
'OKC':'俄克拉何马',
'EBB':'恩德培',
'ENH':'恩施',
'ERL':'二连浩特',
'FAR':'法戈',
'FRA':'法兰克福',
'FDF':'法兰西堡',
'PHL':'费城',
'FAY':'费耶特维尔',
'FYV':'费耶特维尔',
'PHX':'凤凰城',
'FLR':'佛罗伦斯',
'FUO':'佛山',
'PQC':'富国岛',
'FKS':'福岛',
'VOG':'伏尔加格勒',
'FUK':'福冈',
'EAP':'弗赖堡',
'FAT':'弗雷斯诺',
'FNT':'弗林特',
'PUS':'釜山',
'TOY':'富山',
'FUG':'阜阳',
'FOC':'福州',
'YKA':'甘露市',
'KOW':'赣州',
'OKJ':'冈山',
'KHH':'高雄（中国台湾）',
'CPH':'哥本哈根',
'GOT':'哥德堡',
'GOQ':'格尔木',
'GLA':'格拉斯哥',
'GRI':'格兰德艾兰',
'GNB':'格勒洛布尔',
'KGL':'基加利',
'GRB':'格林贝',
'GSO':'格林斯伯勒',
'GSP':'格林维尔',
'CAE':'哥伦比亚',
'COU':'哥伦比亚',
'CMH':'哥伦布',
'GLT':'格伦德斯通',
'GDL':'瓜达拉哈拉',
'GYE':'瓜亚基尔',
'HIJ':'广岛',
'GYS':'广元',
'CAN':'广州',
'KWJ':'光州',
'KWL':'桂林',
'KWE':'贵阳',
'GMQ':'果洛',
'GYU':'固原',
'GBE':'哈博罗内',
'HRB':'哈尔滨',
'HRE':'哈拉雷',
'YHZ':'哈利法克斯',
'HAR':'哈里斯堡',
'HRL':'哈灵顿',
'HMI':'哈密',
'HTI':'哈密尔顿岛',
'HFD':'哈特福德',
'HAK':'海口',
'HLD':'海拉尔',
'HLN':'海伦娜',
'HAM':'汉堡',
'HDG':'邯郸',
'HAJ':'汉诺威',
'HZG':'汉中',
'HGH':'杭州',
'HEL':'赫尔辛基',
'HFE':'合肥',
'HAN':'河内',
'HTN':'和田',
'HEK':'黑河',
'HSV':'亨茨维尔',
'HNY':'衡阳',
'TGU':'洪都拉斯',
'SJO':'圣何塞',
'HET':'呼和浩特',
'SGN':'胡志明市',
'WAW':'华沙',
'WAS':'华盛顿',
'ALO':'滑铁卢',
'HIA':'淮安',
'ZQN':'皇后镇',
'OOL':'黄金海岸',
'TXN':'黄山',
'HBA':'霍巴特',
'HNL':'火奴鲁鲁',
'JIB':'吉布提',
'CHC':'基督城',
'UIO':'基多',
'IEV':'基辅',
'YLW':'基隆拿',
'KUL':'吉隆坡',
'RUN':'圣丹尼斯德拉瑞乌尼翁',
'TNA':'济南',
'JNG':'济宁',
'YKF':'基奇纳',
'KIS':'基苏木',
'EYW':'基韦斯特',
'JXA':'鸡西',
'CJU':'济州岛',
'KTM':'加德满都',
'GCK':'加登城',
'CWL':'加地夫',
'CCU':'加尔各答',
'JGD':'加格达奇',
'CCS':'加拉加斯',
'KGD':'加里宁格勒',
'KBV':'甲米',
'JMU':'佳木斯',
'JXS':'嘉兴',
'JGN':'嘉峪关',
'NBO':'内罗毕',
'JAC':'杰克逊',
'JAX':'杰克逊维尔',
'PNH':'金边',
'JIC':'金昌',
'MAA':'金奈',
'FIH':'金沙萨',
'KIN':'金斯敦',
'JNZ':'锦州',
'FSZ':'静冈',
'JGS':'井冈山',
'JUH':'九华山',
'JIU':'九江',
'SFO':'旧金山',
'JZH':'九寨沟',
'YYC':'卡尔加里',
'OGG':'卡胡卢伊',
'AZO':'卡拉马祖',
'CAG':'卡利亚里',
'FTE':'埃尔卡拉法特',
'CAS':'卡萨布兰卡',
'KHG':'喀什',
'CPR':'卡斯柏',
'CTA':'卡坦尼亚',
'CNS':'凯恩斯',
'KJH':'凯里',
'CAI':'开罗',
'CPT':'开普敦',
'CUN':'坎昆',
'CBR':'坎培拉',
'MKC':'堪萨斯城',
'KGT':'康定',
'LIH':'考爱岛',
'CGN':'科隆',
'KRK':'克拉科夫',
'KRR':'克拉斯诺达尔',
'CFE':'克勒蒙菲朗',
'QRO':'克雷塔罗',
'CLE':'克利夫兰',
'CLJ':'克鲁日',
'CMB':'科伦坡',
'COS':'科罗拉多斯普林斯',
'CKY':'科纳克里',
'CRP':'科珀斯科里斯蒂',
'CZM':'科苏梅尔',
'COO':'科托努',
'KWI':'科威特',
'ROR':'科罗尔',
'KCA':'库车',
'KRL':'库尔勒',
'MRV':'矿水城',
'YQB':'魁北克',
'KMG':'昆明',
'RBA':'拉巴特',
'LZY':'林芝',
'LNL':'陇南',
'LBB':'拉伯克',
'LFT':'拉斐特',
'LOS':'拉各斯',
'LRD':'拉雷多',
'SUF':'拉默齐亚',
'LCA':'拉纳卡',
'RAP':'拉皮德城',
'LXA':'拉萨',
'LAS':'拉斯维加斯',
'BJX':'莱昂(墨西哥)',
'LCH':'莱克查尔斯',
'RHI':'莱茵兰德',
'RHE':'兰斯',
'LAN':'兰辛',
'LHW':'兰州',
'LPQ':'琅勃拉邦',
'LST':'朗斯斯顿',
'JMJ':'澜沧',
'GGG':'朗维尤',
'LAW':'劳顿',
'FLL':'劳特德尔堡',
'RDM':'雷德蒙德',
'RDD':'雷丁',
'RNS':'雷恩',
'RNO':'雷诺',
'REC':'累西腓',
'LYS':'里昂',
'LBV':'利伯维尔',
'LIL':'里尔',
'YQR':'里贾纳',
'RIX':'里加湾',
'LJG':'丽江',
'LLW':'利隆圭',
'LIM':'利马',
'HZH':'黎平',
'RIC':'里士满',
'RSU':'丽水',
'LIS':'里斯本',
'RUH':'利雅得',
'RIO':'里约热内卢',
'LYG':'连云港',
'LEX':'列克星敦',
'LNJ':'临沧',
'LYI':'临沂',
'LPF':'六盘水',
'LZH':'柳州',
'FBM':'卢本巴希',
'LJU':'卢布尔雅那',
'KOJ':'鹿儿岛',
'YDF':'鹿湖',
'LUN':'卢萨卡',
'LUX':'卢森堡',
'RTM':'鹿特丹',
'SDF':'路易斯维尔',
'LZO':'泸州',
'LON':'伦敦',
'LHR':'伦敦希思罗机场',
'LGW':'伦敦盖特威克机场',
'YXU':'伦敦(加拿大)',
'ROA':'罗阿诺克',
'LAD':'罗安达',
'ROK':'罗夫汉普顿',
'RDU':'罗利',
'LRT':'洛里昂',
'ROM':'罗马',
'LFW':'洛美',
'ROC':'罗切斯特',
'LAX':'洛杉矶',
'ROT':'罗托鲁阿',
'LYA':'洛阳',
'NLH':'泸沽湖',
'LLV':'吕梁',
'LAO':'拉瓦格',
'LFQ':'临汾',
'MAD':'马德里',
'IOM':'马恩岛',
'MQT':'马凯特',
'SSG':'马拉博',
'AGP':'马拉加',
'RAK':'马拉喀什',
'MLE':'马累',
'PMI':'马洛卡岛帕尔马',
'MAO':'马瑙斯',
'MNL':'马尼拉',
'MPM':'马普托',
'MZT':'马萨特兰',
'MRS':'马赛',
'CRK':'马巴拉卡特',
'MIA':'迈阿密',
'MSN':'麦迪逊',
'FMY':'迈尔斯堡',
'MKY':'麦凯',
'YMM':'麦克默里堡',
'MOT':'迈诺特',
'MAN':'曼彻斯特',
'MHT':'曼彻斯特',
'MDL':'曼德勒',
'BKK':'曼谷',
'ZLO':'曼萨尼约',
'NZH':'满洲里',
'LUM':'芒市',
'MRU':'毛里求斯',
'MFR':'梅德福',
'ETZ':'梅斯',
'MLU':'门罗',
'MPL':'蒙彼利埃',
'MEM':'孟菲斯',
'MGM':'蒙哥玛利',
'YQM':'蒙克顿',
'BOM':'孟买',
'MRY':'蒙特雷',
'MTY':'蒙特雷',
'YMQ':'蒙特里尔',
'MAF':'米德兰',
'MKE':'密尔沃基',
'MIL':'米兰',
'MSO':'米苏拉',
'MIG':'绵阳',
'NGO':'名古屋',
'MSP':'明尼阿波里斯',
'MOB':'莫比尔',
'MEL':'墨尔本',
'MLB':'墨尔本',
'OHE':'漠河',
'POM':'莫勒斯比港',
'MLM':'莫雷利亚',
'MEI':'默里迪恩',
'MLI':'莫林',
'MOW':'莫斯科',
'MEX':'墨西哥城',
'MDG':'牡丹江',
'MUC':'慕尼黑',
'NAP':'那不勒斯',
'NAS':'拿骚',
'BNA':'纳什维尔',
'SOU':'南安普顿',
'SBN':'南本德',
'KHN':'南昌',
'NAO':'南充',
'NAN':'楠迪',
'NKG':'南京',
'NNG':'南宁',
'APL':'楠普拉',
'NTE':'南特',
'NTG':'南通',
'NNY':'南阳',
'NYT':'内比都',
'NCE':'尼斯',
'NIM':'尼亚美',
'TTJ':'鸟取',
'NGB':'宁波',
'PHF':'纽波特纽斯',
'NCL':'纽卡斯尔',
'NUE':'纽伦堡',
'NYC':'纽约',
'JFK':'纽约肯尼迪',
'ORF':'诺克福',
'TYS':'诺克斯维尔',
'NWI':'诺里奇',
'PGF':'佩皮尼昂',
'PNS':'彭萨科拉',
'PIA':'皮欧里亚',
'PIT':'匹兹堡',
'PER':'珀斯',
'PBC':'普埃布拉',
'HKT':'普吉岛',
'ZAG':'萨格勒布',
'PVD':'普罗维登斯',
'PIS':'普瓦捷',
'SYM':'普洱',
'PZI':'攀枝花',
'JRO':'乞力马扎罗',
'NDG':'齐齐哈尔',
'CUU':'奇瓦瓦',
'JIQ':'黔江',
'GGT':'乔治敦（巴哈马）',
'YXS':'乔治王子城',
'TAO':'青岛',
'CEI':'清莱',
'CNX':'清迈',
'IQN':'庆阳',
'CJJ':'清州',
'JUZ':'衢州',
'JJN':'泉州',
'BAR':'琼海',
'GOA':'热那亚',
'GVA':'日内瓦',
'RIZ':'日照',
'SZG':'萨尔斯堡',
'WGN':'邵阳',
'SVO':'莫斯科',
'SHF':'石河子',
'SSA':'萨尔瓦多',
'SAV':'萨凡纳',
'MBS':'萨吉诺',
'ZCL':'萨卡特卡斯',
'SAC':'萨克拉门托',
'SRQ':'萨拉索塔',
'KUF':'萨马拉',
'YXE':'萨斯卡通',
'YQT':'桑德贝',
'ZNZ':'桑给巴尔岛',
'BKI':'沙巴',
'SWA':'汕头',
'SHA':'上海',
'SHA':'上海虹桥',
'PVG':'上海浦东',
'SHV':'什里夫波特',
'HPG':'神农架',
'SHE':'沈阳',
'SZX':'深圳',
'SAT':'圣安东尼奥',
'SJT':'圣安吉洛',
'SNA':'圣安哪',
'SAO':'圣保罗',
'LED':'圣彼得堡',
'SAN':'圣地亚哥',
'SCL':'圣地亚哥',
'SAF':'圣菲',
'HNA':'盛冈',
'SJC':'圣何塞',
'SRZ':'圣克鲁斯',
'STL':'圣路易斯',
'CSL':'圣路易斯奥比斯波',
'STS':'圣罗萨',
'SGU':'圣乔治',
'SAL':'圣萨尔瓦多',
'YXJ':'圣约翰',
'YYT':'圣约翰斯',
'SJW':'石家庄',
'FSM':'史密斯堡',
'SEL':'首尔',
'GEG':'斯波坎',
'STO':'斯德哥尔摩',
'SUB':'泗水（苏腊巴亚）',
'SVG':'斯塔万格',
'SXB':'斯特拉斯堡',
'STR':'斯图加特',
'MYJ':'日本松山',
'SUX':'苏城',
'FSD':'苏福尔斯',
'ZRH':'苏黎世',
'SSM':'苏圣玛丽',
'CEB':'宿务',
'SOF':'索菲亚',
'AER':'索契',
'SPN':'塞班',
'SYX':'三亚',
'SQD':'上饶',
'TUL':'塔尔萨',
'TLQ':'吐鲁番',
'TLH':'塔拉哈西',
'TMW':'塔姆沃思',
'TAS':'塔什干',
'TPE':'台北（中国台湾）',
'TSA':'台北松山（中国台湾）',
'TPE':'台北桃园（中国台湾）',
'TNN':'台南（中国台湾）',
'TYN':'太原',
'RMQ':'台中（中国台湾）',
'HYN':'台州',
'TPA':'坦帕',
'TVS':'唐山',
'TSV':'汤斯维尔',
'TXK':'特克萨卡纳',
'TVC':'特拉弗斯城',
'TLV':'特拉维夫雅法',
'REL':'特雷利乌',
'TRD':'特隆赫姆',
'TWF':'特温福尔斯',
'TCZ':'腾冲',
'TSN':'天津',
'TNH':'通化',
'TGO':'通辽',
'TEN':'铜仁',
'TUF':'图尔',
'TLS':'图卢兹',
'TLN':'土伦',
'TUN':'突尼斯',
'TUS':'图森',
'TOL':'托莱多',
'TRC':'托雷翁',
'VPS':'瓦尔帕莱索',
'OUA':'瓦加杜古',
'VTE':'万象',
'WXN':'万州',
'GUA':'危地马拉城',
'YYJ':'维多利亚',
'FWA':'韦恩堡',
'VNO':'维尔纽斯',
'VGO':'维哥',
'WEH':'威海',
'ACT':'韦科',
'ISN':'威利斯顿',
'WLG':'威灵顿',
'VRN':'维罗纳',
'VCE':'威尼斯',
'ICT':'威奇托',
'VIE':'维也纳',
'WDH':'温得和克',
'YVR':'温哥华',
'YWG':'温尼伯',
'GUM':'关岛',
'WNH':'文山',
'WNZ':'温州',
'YOW':'渥太华',
'MWX':'务安',
'UFA':'乌法',
'WUA':'乌海',
'WUH':'武汉',
'HLH':'乌兰浩特',
'URC':'乌鲁木齐',
'USH':'乌斯怀亚',
'WUX':'无锡',
'WUS':'武夷山',
'WUT':'五台山',
'WDS':'十堰',
'SIA':'西安',
'HIB':'希宾',
'XIC':'西昌',
'CID':'锡达拉皮兹',
'SYR':'锡拉丘兹',
'XIL':'锡林浩特',
'SYD':'悉尼',
'XNN':'西宁',
'JHG':'西双版纳',
'SEA':'西雅图',
'PBI':'西棕榈滩',
'CLT':'夏洛特',
'YYG':'夏洛特敦',
'XMN':'厦门',
'DAD':'岘港',
'REP':'暹粒',
'SDJ':'仙台',
'HKG':'香港（中国香港）',
'DIG':'香格里拉',
'XFN':'襄阳',
'LIT':'小石城',
'KMQ':'小松',
'MSY':'新奥尔良',
'EWN':'新伯尔尼',
'DEL':'新德里',
'SIP':'辛菲罗波尔',
'SIN':'新加坡',
'KIJ':'新泻',
'CVG':'辛辛那提',
'ACX':'兴义',
'KMJ':'熊本',
'HOU':'休斯敦',
'AKJ':'旭川',
'XUZ':'徐州',
'ATH':'雅典',
'JKT':'雅加达',
'ASU':'亚松森',
'ATL':'亚特兰大',
'YAO':'雅温得',
'NHA':'芽庄',
'ENY':'延安',
'YNZ':'盐城',
'SLC':'盐湖城',
'YNJ':'延吉',
'YNT':'烟台',
'RGN':'仰光',
'YTY':'扬州',
'YZF':'耶洛奈夫',
'YBP':'宜宾',
'YIH':'宜昌',
'LDS':'伊春',
'IKT':'伊尔库茨克',
'PLZ':'伊丽莎白港',
'YIN':'伊宁',
'IST':'伊斯坦布尔',
'YIW':'义乌',
'INC':'银川',
'IND':'印第安纳波利斯',
'INV':'因弗内斯',
'LLF':'永州',
'EUG':'尤金',
'UBJ':'宇部',
'UYN':'榆林',
'YUS':'玉树',
'JNB':'约翰内斯堡',
'YCU':'运城',
'YKH':'营口',
'CTS':'札幌',
'SPK':'扎幌',
'ZHA':'湛江',
'DYG':'张家界',
'ZQZ':'张家口',
'YZY':'张掖',
'ZAT':'昭通',
'ZUJ':'镇江',
'CGO':'郑州',
'CHI':'芝加哥',
'HSN':'舟山',
'ZUH':'珠海',
'FPO':'自由港',
'ZYI':'遵义',
'ZHY':'中卫',
'ABI':'阿比林',
'ABJ':'阿比让',
'ABR':'阿伯丁(美国)',
'ABZ':'阿伯丁(英国)',
'ABQ':'阿布奎基',
'AUH':'阿布扎比',
'ADL':'阿德莱德',
'ALG':'阿尔及尔',
'YIE':'阿尔山',
'ACV':'阿卡塔',
'ACC':'阿克拉',
'AKU':'阿克苏',
'AJU':'阿拉卡茹',
'POA':'阿雷格里港',
'NGQ':'阿里',
'ALC':'阿利坎特',
'AUA':'阿鲁巴',
'ABE':'阿伦敦(宾夕法尼亚，美国)',
'AMA':'阿马里略',
'ARM':'阿米代尔',
'AMS':'阿姆斯特丹',
'AAQ':'阿纳帕',
'ATW':'阿普雷顿',
'AVL':'阿什维尔',
'ASF':'阿斯特拉罕',
'AVN':'阿维尼翁',
'AJA':'阿雅克肖',
'IDA':'爱达福尔斯',
'YEA':'埃德蒙顿',
'EDI':'爱丁堡',
'IMT':'艾恩芒廷',
'BOG':'波哥大',
'EKO':'埃尔科',
'ELP':'埃尔帕索',
'AYQ':'艾尔斯岩',
'EXT':'埃克塞特',
'ASP':'爱丽斯泉',
'EVN':'埃里温',
'EMD':'埃默拉尔德',
'EVV':'埃文斯维尔',
'ONT':'安大略',
'ANC':'安克雷奇',
'AOI':'安科纳',
'AMM':'安曼',
'AQG':'安庆',
'AOG':'鞍山',
'AVA':'安顺',
'ANR':'安特卫普',
'PVR':'巴亚尔塔港',
'ALB':'奥尔巴尼',
'AAL':'奥尔堡',
'AGS':'奥古斯塔（美国）',
'AKL':'奥克兰（新西兰）',
'OAK':'奥克兰（美国）',
'ORL':'奥兰多',
'OMA':'奥马哈',
'MFM':'澳门',
'OSL':'奥斯陆',
'AUS':'奥斯汀',
'BWI':'巴尔的摩',
'PMO':'巴勒莫',
'BRI':'巴里',
'PAR':'巴黎',
'DPS':'巴厘岛',
'BAH':'巴林',
'VLC':'巴伦西亚',
'BKO':'巴马科',
'PTY':'巴拿马',
'BSL':'巴塞尔',
'BCN':'巴塞罗那',
'BIA':'巴斯蒂亚',
'BTR':'巴吞鲁日',
'BSB':'巴西利亚',
'AEB':'百色',
'BGF':'班吉',
'BGR':'邦哥尔',
'BUR':'伯班克',
'BSD':'保山',
'BAV':'包头',
'BFS':'贝尔法斯特',
'BEG':'贝尔格莱德',
'BGO':'卑尔根',
'BHY':'北海',
'BJS':'北京',
'PEK':'北京首都',
'NAY':'北京南苑',
'BEY':'贝鲁特',
'BIO':'毕尔巴鄂',
'PEE':'彼尔姆',
'BFJ':'毕节',
'BIL':'比灵斯',
'PSA':'比萨',
'BIS':'俾斯麦',
'BTM':'比尤特',
'BGM':'宾厄姆顿',
'PUF':'波城',
'BOD':'波尔多',
'PIH':'波卡特洛',
'BER':'柏林',
'BLQ':'博洛尼亚',
'BPT':'波蒙特',
'BHM':'伯明翰(美国)',
'BHX':'伯明翰(英国)',
'BON':'博奈尔',
'BOS':'波士顿',
'PDX':'波特兰',
'BOI':'博伊西',
'BZN':'博兹曼',
'BUD':'布达佩斯',
'BUF':'布法罗',
'BUH':'布加勒斯特',
'BZV':'布拉柴维尔',
'PRG':'布拉格',
'BRO':'布朗斯维尔',
'BES':'布勒斯特',
'BNE':'布里斯班',
'BRS':'布里斯托',
'BDS':'布林迪西',
'BRU':'布鲁塞尔',
'BJM':'布琼布拉',
'BUE':'布宜诺斯艾利斯',
'BPE':'北戴河',
'CHS':'查尔斯顿',
'CHA':'查塔努加',
'NBS':'长白山',
'CGQ':'长春',
'CGD':'常德',
'NGS':'长崎',
'CSX':'长沙',
'CIH':'长治',
'CZX':'常州',
'CHG':'朝阳',
'CTU':'成都',
'CIF':'赤峰',
'CKG':'重庆',
'OKA':'冲绳',
'OSA':'大阪',
'YQU':'大草原城',
'DRW':'达尔文',
'OIT':'大分',
'GFK':'大福克斯',
'GRR':'大急流城',
'DAC':'达卡',
'DKR':'达喀尔',
'DFW':'达拉斯',
'DLU':'大理',
'DLC':'大连',
'GTF':'大瀑布村',
'TAE':'大邱',
'DAT':'大同',
'DAX':'达州',
'DAY':'代顿',
'DAB':'代托纳比奇',
'DDG':'丹东',
'DEN':'丹佛',
'DYN':'丹阳',
'DCY':'稻城',
'DUR':'德班',
'DRS':'德累斯顿',
'HXD':'德令哈',
'DLH':'德卢斯',
'DSM':'得梅因',
'DPO':'德文波特',
'DXB':'迪拜',
'DBQ':'迪比克',
'TBS':'第比利斯',
'DIK':'迪克森',
'TRS':'的里瓦斯特',
'TSR':'蒂米什瓦拉',
'DTT':'底特律',
'TYO':'东京',
'HND':'东京羽田',
'NRT':'东京成田',
'DOY':'东营',
'DUB':'都柏林',
'DLA':'杜阿拉',
'DRO':'杜兰戈',
'TRN':'都灵',
'DUS':'杜塞尔多夫',
'DNH':'敦煌',
'YTO':'多伦多',
'DHN':'多森',
'DQA':'大庆',
'DSN':'鄂尔多斯',
'OKC':'俄克拉何马',
'EBB':'恩德培',
'ENH':'恩施',
'FAR':'法戈',
'FRA':'法兰克福',
'FDF':'法兰西堡',
'PHL':'费城',
'FAY':'费耶特维尔',
'FYV':'费耶特维尔',
'PHX':'凤凰城',
'FLR':'佛罗伦斯',
'FUO':'佛山',
'FKS':'福岛',
'VOG':'伏尔加格勒',
'FUK':'福冈',
'EAP':'弗赖堡',
'FAT':'弗雷斯诺',
'FNT':'弗林特',
'PUS':'釜山',
'TOY':'富山',
'FUG':'阜阳',
'FOC':'福州',
'YKA':'甘露市',
'KOW':'赣州',
'OKJ':'冈山',
'KHH':'高雄',
'CPH':'哥本哈根',
'GOT':'哥德堡',
'GOQ':'格尔木',
'GLA':'格拉斯哥',
'GRI':'格兰德艾兰',
'GNB':'格勒洛布尔',
'KGL':'基加利',
'GRB':'格林贝',
'GSO':'格林斯伯勒',
'GSP':'格林维尔',
'CAE':'哥伦比亚',
'COU':'哥伦比亚',
'CMH':'哥伦布',
'GLT':'格伦德斯通',
'GDL':'瓜达拉哈拉',
'GYE':'瓜亚基尔',
'HIJ':'广岛',
'GYS':'广元',
'CAN':'广州',
'KWJ':'光州',
'KWL':'桂林',
'KWE':'贵阳',
'GBE':'哈博罗内',
'HRB':'哈尔滨',
'HRE':'哈拉雷',
'YHZ':'哈利法克斯',
'HAR':'哈里斯堡',
'HRL':'哈灵顿',
'HMI':'哈密',
'HTI':'哈密尔顿岛',
'HFD':'哈特福德',
'HAK':'海口',
'HLD':'海拉尔',
'HLN':'海伦娜',
'HAM':'汉堡',
'HDG':'邯郸',
'HAJ':'汉诺威',
'HZG':'汉中',
'HGH':'杭州',
'HEL':'赫尔辛基',
'HFE':'合肥',
'HAN':'河内',
'HTN':'和田',
'HEK':'黑河',
'HSV':'亨茨维尔',
'HNY':'衡阳',
'TGU':'洪都拉斯',
'SJO':'圣何塞',
'HET':'呼和浩特',
'SGN':'胡志明市',
'WAW':'华沙',
'WAS':'华盛顿',
'ALO':'滑铁卢',
'HIA':'淮安',
'ZQN':'皇后镇',
'OOL':'黄金海岸',
'TXN':'黄山',
'HBA':'霍巴特',
'HNL':'火奴鲁鲁',
'JIB':'吉布提',
'CHC':'基督城',
'UIO':'基多',
'IEV':'基辅',
'YLW':'基隆拿',
'KUL':'吉隆坡',
'RUN':'圣丹尼斯德拉瑞乌尼翁',
'TNA':'济南',
'JNG':'济宁',
'YKF':'基奇纳',
'KIS':'基苏木',
'EYW':'基韦斯特',
'JXA':'鸡西',
'CJU':'济州岛',
'KTM':'加德满都',
'GCK':'加登城',
'CWL':'加地夫',
'CCU':'加尔各答',
'JGD':'加格达奇',
'CCS':'加拉加斯',
'KGD':'加里宁格勒',
'KBV':'甲米',
'JMU':'佳木斯',
'JXS':'嘉兴',
'JGN':'嘉峪关',
'NBO':'内罗毕',
'JAC':'杰克逊',
'JAX':'杰克逊维尔',
'PNH':'金边',
'JIC':'金昌',
'MAA':'金奈',
'FIH':'金沙萨',
'KIN':'金斯敦',
'JNZ':'锦州',
'FSZ':'静冈',
'JGS':'井冈山',
'JUH':'九华山',
'JIU':'九江',
'SFO':'旧金山',
'JZH':'九寨沟',
'YYC':'卡尔加里',
'OGG':'卡胡卢伊',
'AZO':'卡拉马祖',
'CAG':'卡利亚里',
'FTE':'埃尔卡拉法特',
'CAS':'卡萨布兰卡',
'KHG':'喀什',
'CPR':'卡斯柏',
'CTA':'卡坦尼亚',
'CNS':'凯恩斯',
'KJH':'凯里',
'CAI':'开罗',
'CPT':'开普敦',
'CUN':'坎昆',
'CBR':'坎培拉',
'MKC':'堪萨斯城',
'KGT':'康定',
'LIH':'考爱岛',
'CGN':'科隆',
'KRK':'克拉科夫',
'KRR':'克拉斯诺达尔',
'CFE':'克勒蒙菲朗',
'QRO':'克雷塔罗',
'CLE':'克利夫兰',
'CLJ':'克鲁日',
'CMB':'科伦坡',
'COS':'科罗拉多斯普林斯',
'CKY':'科纳克里',
'CRP':'科珀斯科里斯蒂',
'CZM':'科苏梅尔',
'COO':'科托努',
'KWI':'科威特',
'ROR':'科罗尔',
'KCA':'库车',
'KRL':'库尔勒',
'MRV':'矿水城',
'YQB':'魁北克',
'KMG':'昆明',
'RBA':'拉巴特',
'LBB':'拉伯克',
'LFT':'拉斐特',
'LOS':'拉各斯',
'LRD':'拉雷多',
'SUF':'拉默齐亚',
'LCA':'拉纳卡',
'RAP':'拉皮德城',
'LXA':'拉萨',
'LAS':'拉斯维加斯',
'BJX':'莱昂(墨西哥)',
'LCH':'莱克查尔斯',
'RHI':'莱茵兰德',
'RHE':'兰斯',
'LAN':'兰辛',
'LHW':'兰州',
'LPQ':'琅勃拉邦',
'LST':'朗斯斯顿',
'GGG':'朗维尤',
'LAW':'劳顿',
'FLL':'劳特德尔堡',
'RDM':'雷德蒙德',
'RDD':'雷丁',
'RNS':'雷恩',
'RNO':'雷诺',
'REC':'累西腓',
'LYS':'里昂',
'LBV':'利伯维尔',
'LIL':'里尔',
'YQR':'里贾纳',
'RIX':'里加湾',
'LJG':'丽江',
'LLW':'利隆圭',
'LIM':'利马',
'HZH':'黎平',
'RIC':'里士满',
'RSU':'丽水',
'LIS':'里斯本',
'RUH':'利雅得',
'RIO':'里约热内卢',
'LYG':'连云港',
'LEX':'列克星敦',
'LNJ':'临沧',
'LYI':'临沂',
'LPF':'六盘水',
'LZH':'柳州',
'FBM':'卢本巴希',
'LJU':'卢布尔雅那',
'KOJ':'鹿儿岛',
'YDF':'鹿湖',
'LUN':'卢萨卡',
'LUX':'卢森堡',
'RTM':'鹿特丹',
'SDF':'路易斯维尔',
'LZO':'泸州',
'LON':'伦敦',
'YXU':'伦敦(加拿大)',
'ROA':'罗阿诺克',
'LAD':'罗安达',
'ROK':'罗夫汉普顿',
'RDU':'罗利',
'LRT':'洛里昂',
'ROM':'罗马',
'LFW':'洛美',
'ROC':'罗切斯特',
'LAX':'洛杉矶',
'ROT':'罗托鲁阿',
'LYA':'洛阳',
'NLH':'泸沽湖',
'LLV':'吕梁',
'LAO':'拉瓦格',
'LFQ':'临汾',
'MAD':'马德里',
'IOM':'马恩岛',
'MQT':'马凯特',
'SSG':'马拉博',
'AGP':'马拉加',
'RAK':'马拉喀什',
'MLE':'马累',
'PMI':'马洛卡岛帕尔马',
'MAO':'马瑙斯',
'MNL':'马尼拉',
'MPM':'马普托',
'MZT':'马萨特兰',
'MRS':'马赛',
'MIA':'迈阿密',
'MSN':'麦迪逊',
'FMY':'迈尔斯堡',
'MKY':'麦凯',
'YMM':'麦克默里堡',
'MOT':'迈诺特',
'MAN':'曼彻斯特',
'MHT':'曼彻斯特',
'MDL':'曼德勒',
'BKK':'曼谷',
'ZLO':'曼萨尼约',
'NZH':'满洲里',
'LUM':'芒市',
'MRU':'毛里求斯',
'MFR':'梅德福',
'ETZ':'梅斯',
'MLU':'门罗',
'MPL':'蒙彼利埃',
'MEM':'孟菲斯',
'MGM':'蒙哥玛利',
'YQM':'蒙克顿',
'BOM':'孟买',
'MRY':'蒙特雷',
'MTY':'蒙特雷',
'YMQ':'蒙特里尔',
'MAF':'米德兰',
'MKE':'密尔沃基',
'MIL':'米兰',
'MSO':'米苏拉',
'MIG':'绵阳',
'NGO':'名古屋',
'MSP':'明尼阿波里斯',
'MOB':'莫比尔',
'MEL':'墨尔本',
'MLB':'墨尔本',
'OHE':'漠河',
'POM':'莫勒斯比港',
'MLM':'莫雷利亚',
'MEI':'默里迪恩',
'MLI':'莫林',
'MOW':'莫斯科',
'MEX':'墨西哥城',
'MDG':'牡丹江',
'MUC':'慕尼黑',
'NAP':'那不勒斯',
'NAS':'拿骚',
'BNA':'纳什维尔',
'SOU':'南安普顿',
'SBN':'南本德',
'KHN':'南昌',
'NAO':'南充',
'NAN':'楠迪',
'NKG':'南京',
'NNG':'南宁',
'APL':'楠普拉',
'NTE':'南特',
'NTG':'南通',
'NNY':'南阳',
'NYT':'内比都',
'NCE':'尼斯',
'NIM':'尼亚美',
'TTJ':'鸟取',
'NGB':'宁波',
'PHF':'纽波特纽斯',
'NCL':'纽卡斯尔',
'NUE':'纽伦堡',
'NYC':'纽约',
'ORF':'诺克福',
'TYS':'诺克斯维尔',
'NWI':'诺里奇',
'PGF':'佩皮尼昂',
'PNS':'彭萨科拉',
'PIA':'皮欧里亚',
'PIT':'匹兹堡',
'PER':'珀斯',
'PBC':'普埃布拉',
'HKT':'普吉岛',
'ZAG':'萨格勒布',
'PVD':'普罗维登斯',
'PIS':'普瓦捷',
'SYM':'普洱',
'JRO':'乞力马扎罗',
'NDG':'齐齐哈尔',
'CUU':'奇瓦瓦',
'JIQ':'黔江',
'GGT':'乔治敦（巴哈马）',
'YXS':'乔治王子城',
'TAO':'青岛',
'CEI':'清莱',
'CNX':'清迈',
'IQN':'庆阳',
'CJJ':'清州',
'JUZ':'衢州',
'JJN':'泉州',
'GOA':'热那亚',
'GVA':'日内瓦',
'RIZ':'日照',
'SZG':'萨尔斯堡',
'SSA':'萨尔瓦多',
'SAV':'萨凡纳',
'MBS':'萨吉诺',
'ZCL':'萨卡特卡斯',
'SAC':'萨克拉门托',
'SRQ':'萨拉索塔',
'KUF':'萨马拉',
'YXE':'萨斯卡通',
'YQT':'桑德贝',
'ZNZ':'桑给巴尔岛',
'BKI':'沙巴',
'SWA':'汕头',
'SHA':'上海',
'SHA':'上海',
'PVG':'上海',
'SHV':'什里夫波特',
'HPG':'神农架',
'SHE':'沈阳',
'SZX':'深圳',
'SAT':'圣安东尼奥',
'SJT':'圣安吉洛',
'SNA':'圣安哪',
'SAO':'圣保罗',
'LED':'圣彼得堡',
'SAN':'圣地亚哥',
'SCL':'圣地亚哥',
'SAF':'圣菲',
'HNA':'盛冈',
'SJC':'圣何塞',
'SRZ':'圣克鲁斯',
'STL':'圣路易斯',
'CSL':'圣路易斯奥比斯波',
'STS':'圣罗萨',
'SGU':'圣乔治',
'SAL':'圣萨尔瓦多',
'YXJ':'圣约翰',
'YYT':'圣约翰斯',
'SJW':'石家庄',
'FSM':'史密斯堡',
'SEL':'首尔',
'GEG':'斯波坎',
'STO':'斯德哥尔摩',
'SUB':'泗水（苏腊巴亚）',
'SVG':'斯塔万格',
'SXB':'斯特拉斯堡',
'STR':'斯图加特',
'MYJ':'日本松山',
'SUX':'苏城',
'FSD':'苏福尔斯',
'ZRH':'苏黎世',
'SSM':'苏圣玛丽',
'CEB':'宿务',
'SOF':'索菲亚',
'AER':'索契',
'SPN':'塞班',
'SYX':'三亚',
'TUL':'塔尔萨',
'TLH':'塔拉哈西',
'TMW':'塔姆沃思',
'TAS':'塔什干',
'TPE':'台北',
'TSA':'台北松山',
'TPE':'台北桃园',
'TNN':'台南',
'TYN':'太原',
'RMQ':'台中',
'HYN':'台州',
'TPA':'坦帕',
'TVS':'唐山',
'TSV':'汤斯维尔',
'TXK':'特克萨卡纳',
'TVC':'特拉弗斯城',
'TLV':'特拉维夫雅法',
'REL':'特雷利乌',
'TRD':'特隆赫姆',
'TWF':'特温福尔斯',
'TCZ':'腾冲',
'TSN':'天津',
'TNH':'通化',
'TGO':'通辽',
'TEN':'铜仁',
'TUF':'图尔',
'TLS':'图卢兹',
'TLN':'土伦',
'TUN':'突尼斯',
'TUS':'图森',
'TOL':'托莱多',
'TRC':'托雷翁',
'VPS':'瓦尔帕莱索',
'OUA':'瓦加杜古',
'VTE':'万象',
'WXN':'万州',
'GUA':'危地马拉城',
'YYJ':'维多利亚',
'FWA':'韦恩堡',
'VNO':'维尔纽斯',
'VGO':'维哥',
'WEH':'威海',
'ACT':'韦科',
'ISN':'威利斯顿',
'WLG':'威灵顿',
'VRN':'维罗纳',
'VCE':'威尼斯',
'ICT':'威奇托',
'VIE':'维也纳',
'WDH':'温得和克',
'YVR':'温哥华',
'YWG':'温尼伯',
'GUM':'关岛',
'WNH':'文山',
'WNZ':'温州',
'YOW':'渥太华',
'MWX':'务安',
'UFA':'乌法',
'WUA':'乌海',
'WUH':'武汉',
'HLH':'乌兰浩特',
'URC':'乌鲁木齐',
'USH':'乌斯怀亚',
'WUX':'无锡',
'WUS':'武夷山',
'WUT':'五台山',
'SIA':'西安',
'HIB':'希宾',
'XIC':'西昌',
'CID':'锡达拉皮兹',
'SYR':'锡拉丘兹',
'XIL':'锡林浩特',
'SYD':'悉尼',
'XNN':'西宁',
'JHG':'西双版纳',
'SEA':'西雅图',
'PBI':'西棕榈滩',
'CLT':'夏洛特',
'YYG':'夏洛特敦',
'XMN':'厦门',
'DAD':'岘港',
'REP':'暹粒',
'SDJ':'仙台',
'HKG':'香港',
'DIG':'香格里拉',
'XFN':'襄阳',
'LIT':'小石城',
'KMQ':'小松',
'MSY':'新奥尔良',
'EWN':'新伯尔尼',
'DEL':'新德里',
'SIP':'辛菲罗波尔',
'SIN':'新加坡',
'KIJ':'新泻',
'CVG':'辛辛那提',
'ACX':'兴义',
'KMJ':'熊本',
'HOU':'休斯敦',
'AKJ':'旭川',
'XUZ':'徐州',
'ATH':'雅典',
'JKT':'雅加达',
'ASU':'亚松森',
'ATL':'亚特兰大',
'YAO':'雅温得',
'NHA':'芽庄',
'ENY':'延安',
'YNZ':'盐城',
'SLC':'盐湖城',
'YNJ':'延吉',
'YNT':'烟台',
'RGN':'仰光',
'YTY':'扬州',
'YZF':'耶洛奈夫',
'YBP':'宜宾',
'YIH':'宜昌',
'LDS':'伊春',
'IKT':'伊尔库茨克',
'PLZ':'伊丽莎白港',
'YIN':'伊宁',
'IST':'伊斯坦布尔',
'YIW':'义乌',
'INC':'银川',
'IND':'印第安纳波利斯',
'INV':'因弗内斯',
'LLF':'永州',
'EUG':'尤金',
'UBJ':'宇部',
'UYN':'榆林',
'YUS':'玉树',
'JNB':'约翰内斯堡',
'YCU':'运城',
'YKH':'营口',
'CTS':'札幌',
'SPK':'扎幌',
'ZHA':'湛江',
'DYG':'张家界',
'ZQZ':'张家口',
'YZY':'张掖',
'ZAT':'昭通',
'ZUJ':'镇江',
'CGO':'郑州',
'CHI':'芝加哥',
'HSN':'舟山',
'ZUH':'珠海',
'FPO':'自由港',
'ZYI':'遵义',
}

def get_ip():
    conn = pymysql.connect(host="192.168.0.108", user="root", password="cdyn00", database="ippool", charset="utf8")
    cursor = conn.cursor()
    # 定义要执行的SQL语句
    sql = "select ip, port from ippool"
    cursor.execute(sql)
    ips = cursor.fetchall()
    # 关闭光标对象
    cursor.close()
    # 关闭数据库连接
    conn.close()
    return ips


def get_search(session, url, headers, params, proxies):
    try:
        res = session.post(url, headers=headers, json=params, proxies=proxies, timeout=8)
        return res.json()
    except:
        return None


def get_detail(cookie, row):
    try:
        ua = random.choice(user_agent)
        ips = get_ip()
        ip = random.choice(ips)
        session = requests.session()
        name = row[0]
        dpt = row[1]
        arr = row[2]
        flight = row[3]
        d_date = row[4]
        # d_time = row[5]
        card = row[6]
        proxies = {
            "http": "http://{}:{}".format(ip[0], ip[1]),
            "https": "http://{}:{}".format(ip[0], ip[1]),
        }
        sign = "".join(str(uuid.uuid4()).split("-")).upper()
        headers = {
            '_appid': 'youji',
            # '_rd': '76559710-c27e-11ea-ac94-f7510da3a420',
            '_source': 'm',
            'Accept': 'application/json, text/plain, */*',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
            'Connection': 'close',
            'Content-Type': 'application/json;charset=UTF-8',
            'Host': 'you.m.autohome.com.cn',
            # 'Origin': 'https://you.m.autohome.com.cn',
            'Sec-Fetch-Dest': 'empty',
            'Sec-Fetch-Mode': 'cors',
            # 'Sec-Fetch-Site': 'same-origin',
            'User-Agent': ua,
            'Cookie': cookie
        }
        s1_url = "https://you.m.autohome.com.cn/api_flights/api/open/ticket/flight/list?sign={}&_ts={}".format(sign, int(
            time.time() * 1000))
        s1_params = {"depCity":city_list[dpt],"depCode":dpt,"goDate":d_date,"childTicket":False,"goScreen":{"cabinId":0,"carrier":"","onlyThrough":"","planeType":"","priceSort":1,"screeShare":"","timeId":"","timeSort":0},"arrCity":city_list[arr],"arrCode":arr,"backDate":"","backScreen":{"cabinId":"","carrier":"","onlyThrough":"","planeType":"","priceSort":1,"screeShare":"","timeId":"","timeSort":0},"searchType":0,"supplier":"1"}
        try:
            session.post(s1_url, headers=headers, json=s1_params, proxies=proxies, timeout=8)
        except:
            pass
        url = "https://you.m.autohome.com.cn/api_flights/api/open/ticket/flight/detail?sign={}&_ts={}".format(sign, int(
            time.time() * 1000))
        params = {"arr": arr, "backArr": "PVG", "backDate": "", "backFlightNum": "", "dpt": dpt, "backDpt": "KMG",
                  "flightNum": flight, "goDate": d_date, "searchType": 0, "supplier": "1"}
        print("查询航程信息")
        search = get_search(session, url, headers, params, proxies)
        if not search:
            search = get_search(session, url, headers, params, proxies)
        if not search:
            search = get_search(session, url, headers, params, proxies)
        vendorY = search['result']['vendorY']
        cabin_list = ["Y", "T", "G", "R", "S", "U2", "W", "B", "H", "U", "A", "L", "E", "Y3", "S1", "S2", "S3", "V", "Z", "U1", "V1", "Z2", "Z3", "Z4"]
        vendorY = filter(lambda x: int(x["price"].strip("¥")) > 949 and int(x["price"].strip("¥")) < 1081 and re.findall('([A-Z])', x['cabinTips'])[0] in cabin_list, vendorY)
        cabins = sorted(vendorY, key=lambda x: int(x["price"].strip("¥")))
        priceDetailId = cabins[0]["priceDetailId"]
        detail_url = "https://you.m.autohome.com.cn/api_flights/api/user/ticket/orderform/detail?priceDetailId=" + priceDetailId
        detail_header = {
            'Accept': 'application/json, text/plain, */*',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
            'Connection': 'close',
            'Host': 'you.m.autohome.com.cn',
            'Sec-Fetch-Dest': 'empty',
            'Sec-Fetch-Mode': 'cors',
            'Sec-Fetch-Site': 'same-origin',
            'User-Agent': ua,
            'Content-Type': 'text/plain',
            'Cookie': cookie
        }
        print("开始处理")
        try:
            order_res = session.get(detail_url, headers=detail_header, proxies=proxies, timeout=8)
        except:
            order_res = session.get(detail_url, headers=detail_header, proxies=proxies, timeout=8)
        detail_data = order_res.json()
        bookingNo = detail_data['result']['bookingNo']
        # suc_url = "https://you.m.autohome.com.cn/api_flights/api/user/ticket/orderform/price/detail"
        # suc_headers = {
        #         'Host': 'you.m.autohome.com.cn',
        #         'Connection': 'close',
        #         'Accept': 'application/json, text/plain, */*',
        #         'User-Agent': ua,
        #         'Content-Type': 'application/json;charset=UTF-8',
        #         'Origin': 'https://you.m.autohome.com.cn',
        #         'Sec-Fetch-Site': 'same-origin',
        #         'Sec-Fetch-Mode': 'cors',
        #         'Sec-Fetch-Dest': 'empty',
        #         'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8'
        #     }
        # suc_param = {"bookingNo": bookingNo, "couponCode": "", "invoiceFlag": False, "passengers": [{"birthday": "1983-09-13", "chnName": "陈汉林","credentialNumber": "140322198309131212", "credentialType": 1, "enFirstName": "", "enLastName": "", "mobile": "13550367050", "sex": "M"}], "travelFund": 0, "travelPoints": 0, "wanlitongAmount": 0, "supplier": "1"}
        # try:
        #     suc_res = requests.post(suc_url, headers=suc_headers, json=suc_param, proxies=proxies, timeout=8, cookies=cookie)
        # except:
        #     suc_res = requests.post(suc_url, headers=suc_headers, json=suc_param, proxies=proxies, cookies=cookie)
        ticket_url = "https://you.m.autohome.com.cn/api_m/api/user/travel/fund/get/my/coupons"
        ticket_header = {
              'Host': 'you.m.autohome.com.cn',
              'Accept': 'application/json, text/plain, */*',
              'User-Agent': ua,
              'Content-Type': 'application/x-www-form-urlencoded',
              'Sec-Fetch-Site': 'same-origin',
              'Sec-Fetch-Mode': 'cors',
              'Sec-Fetch-Dest': 'empty',
              'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
              'Cookie': cookie
    }
        ticket_params = "pageIndex=1&pageSize=999&queryFlag=3&authorization="
        try:
            ticket_res = session.post(ticket_url, headers=ticket_header, data=ticket_params, proxies=proxies, timeout=8)
        except:
            ticket_res = session.post(ticket_url, headers=ticket_header, data=ticket_params, proxies=proxies, timeout=8)
        ticket_data = ticket_res.json()
        if ticket_data['result']['total'] >= 1:
            ticket_list = list(filter(lambda x: x['explanation'] == '仅限机票可用，不可叠加使用', ticket_data["result"]["list"]))
            if ticket_list:
                ticket = ticket_list[0]['code_no']
                create_url = "https://you.m.autohome.com.cn/api_flights/api/user/ticket/order/create"
                cre_header = {
                    'Host': 'you.m.autohome.com.cn',
                    'Connection': 'close',
                    'Accept': 'application/json, text/plain, */*',
                    'User-Agent': ua,
                    'Content-Type': 'application/json;charset=UTF-8',
                    # 'Origin': 'https://you.m.autohome.com.cn',
                    # 'Sec-Fetch-Site': 'same-origin',
                    'Sec-Fetch-Mode': 'cors',
                    'Sec-Fetch-Dest': 'empty',
                    'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
                    'Cookie': cookie
                }
                birth = card[6:10] + "-" + card[10:12] + "-" + card[12:14]
                cre_params = {"bookingNo": bookingNo, "contactEmail": "", "contactMobile": "17713541351", "contactName": name,
                              "couponCode": ticket, "invoiceFlag": False,
                              "invoiceInfo": {"address": "", "invoiceTitle": "", "invoiceType": "", "mobile": "", "name": "",
                                              "taxpayerIdentityNumber": ""}, "passengers": [
                        {"birthday": birth, "chnName": name, "credentialNumber": card, "credentialType": 1,
                         "enFirstName": "", "enLastName": "", "mobile": "13550367050", "sex": "M"}], "pvareaId": "",
                              "source": "h5",
                              "sourceId": "", "travelFund": 0, "travelPoints": 0, "wanlitongAmount": 0, "supplier": "1"}
                print("创建订单中")
                try:
                    cre_res = session.post(create_url, headers=cre_header, json=cre_params, proxies=proxies, timeout=8)
                except:
                    cre_res = session.post(create_url, headers=cre_header, json=cre_params, proxies=proxies, timeout=8)
                cre_data = cre_res.json()
                if cre_data['returncode'] == 5001001:
                    print(cre_data['message'])
                    with open("err.csv", "a", encoding="utf-8") as f:
                        writer = csv.writer(f, delimiter=',')
                        writer.writerow(row)
                    return 5001001
                # order_id = cre_data["result"]["orderId"]
                # check_url = "https://you.m.autohome.com.cn/api_flights/api/user/ticket/pay/check?source=h5&orderId={}&jumpUrl=".format(
                #     order_id)
                # try:
                #     check_res = session.get(check_url, headers=cre_header, proxies=proxies, timeout=8)
                # except:
                #     check_res = session.get(check_url, headers=cre_header, proxies=proxies, timeout=8)
                # check_data = check_res.json()
                # if check_data['returncode'] == 0:
                #     print(name, "订单已生成")
                #     return 0
                # else:
                #     print(check_data['message'])
                #     with open("err.csv", "a", encoding="utf-8") as f:
                #         writer = csv.writer(f, delimiter=',')
                #         writer.writerow(row)
                #     return 3
                if cre_data['returncode'] == 0:
                    print(cre_data['message'])
                    print(name, "订单已生成")
                    return 0
                else:
                    print(cre_data['message'])
                    with open("err.csv", "a", encoding="utf-8") as f:
                        writer = csv.writer(f, delimiter=',')
                        writer.writerow(row)
                    return 11
            else:
                return 2
        else:
            return 2
    except:
        with open("err.csv", "a", encoding="utf-8") as f:
            writer = csv.writer(f, delimiter=',')
            writer.writerow(row)
        return 11


# 换行程
def op_res():
    if lines:
        line = lines.pop()
        res = get_detail(cookie, line)
        if res == 5001001:
            exit()
        if res == 0:
            print(zh[0], "生单成功")
            print("============================")
            with open("生成订单的账号.csv", "a", encoding="UTF-8-sig") as f:
                writer = csv.writer(f, delimiter=',')
                writer.writerow(zh)
            # driver.get("https://you.m.autohome.com.cn/market/orderlist")
            input("支付完成点击回车")
            driver.close()
        if res == 2:
            driver.close()
            with open("err.csv", "a", encoding="utf-8") as f:
                writer = csv.writer(f, delimiter=',')
                writer.writerow(row)
            with open("未使用账号.csv", "a", encoding="UTF-8-sig") as f:
                writer = csv.writer(f, delimiter=',')
                writer.writerow(zh)
            print(zh[0], "无优惠券")
        if res == 11:
            if lines:
                return op_res()
            else:
                print("行程已用完")
                print("当前账号:", zh[0])
                exit(0)
    else:
        print("行程已用完")
        print("当前账号:", zh[0])
        exit(0)


if __name__ == '__main__':
    lines = []
    with open("信息.csv", encoding="UTF-8-sig") as f:
        reader = csv.reader(f)
        for row in reader:
            lines.append(row)
    with open("账号.csv", encoding="UTF-8-sig") as zh:
        reader = csv.reader(zh)
        for zh in reader:
            cookie, driver = set_jar(zh[0], zh[1])
            op_res()
        print("账号已用完")
    for l in lines:
        with open("未使用行程.csv", "a", encoding="UTF-8-sig") as f:
            writer = csv.writer(f, delimiter=',')
            writer.writerow(l)



